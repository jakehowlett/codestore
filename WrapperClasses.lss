%REM
	EXAMPLE OF USE OF WRAPPER CLASSES
%END REM

Sub Initialize
	Dim factory As New InvoiceFactory
	Dim invoices As InvoiceCollection
	Dim invoice As Invoice
	
	Set invoices = factory.GetAllInvoices()
	
	If invoices.Count > 0 Then
		
		Set invoice	= invoices.getFirst()
		
		While Not invoice Is Nothing
			
			Print "<h1>" + invoice.Title + "</h1><p>" + invoice.ValueFormattedAsString + "</p>"
			Print "<h4>As JSON</h4>"
			Print "<p><code>" + invoice.AsJSON + "</code></p>"
			
			Print "<h3>Customer</h3>"
			Print "<p>Customer's name is " + invoice.Customer.FullNameReversed + " ("+ invoice.CustomerID + "), who has " + CStr(invoice.Customer.Invoices.Count) + " invoices in total.</p>"
			Print "<h4>As JSON</h4>"
			Print "<p><code>" + invoice.Customer.AsJSON + "</code></p>"
			
			Print "<hr>"
			
			
			Set invoice = invoices.getNext()
		Wend
		
	Else
		Print "NO INVOICES ("+CStr(invoices.count)")"
	End If
End Sub

%REM
	CLASSES REFERENCED BY THE DEMO CODE ABOVE
%END REM


%REM
	Class InvoiceFactory
	Description: Comments for Class
%END REM
Class InvoiceFactory As DocumentFactory
	
	
	Sub New(), DocumentFactory()
	End Sub
	
	%REM
		Function GetAllInvoiecs
		Description: Comments for Function
	%END REM
	Function GetAllInvoices() As InvoiceCollection
		Set view_ = database.GetView("InvoicesByTitle")
		
		Set GetAllInvoices = New InvoiceCollection(view_.Allentries)
	End Function
	
	%REM
		Function GetInvoicesByTitle
		Description: Comments for Function
	%END REM
	Function GetInvoicesByTitle(title As String) As InvoiceCollection
		Set view_ = database.GetView("Invoices")
		
		Set GetInvoicesByTitle = New InvoiceCollection(view_.Getalldocumentsbykey(title, False))
	End Function
	
	%REM
		Function GetInvoicesByCustomer
		Description: Comments for Function
	%END REM
	Function GetInvoicesByCustomer(id As String) As InvoiceCollection
		Set view_ = database.GetView("InvoicesByCustomerID")
		
		Set GetInvoicesByCustomer = New InvoiceCollection(view_.GetAllDocumentsByKey(id, True))
	End Function
End Class
%REM
	Class InvoiceCollection
	Description: Comments for Class
%END REM
Class InvoiceCollection As DocumentCollection
	
	Sub New(docs As Variant), DocumentCollection(docs)
	End Sub
	
	Function getFirst() As DocumentWrapper
		If getFirstDoc() Is Nothing Then
			Set getFirst = Nothing
		Else
			Set getFirst = New Invoice(CurrentDocument)
		End If
	End Function
	
	Function getNext() As DocumentWrapper
		If getNextDoc() Is Nothing Then
			Set getNext = Nothing
		Else
			Set getNext = New Invoice(CurrentDocument)
		End If	
	End Function
	
End Class


%REM
	Class Invoice
	Description: Comments for Class
%END REM
Class Invoice As DocumentWrapper
	Private Customer_ As Customer
	
	Sub New(doc As NotesDocument), DocumentWrapper(doc)
	End Sub
	
	%REM
		Property Get Title
		Description: Comments for Property Get
	%END REM
	Property Get Title As String
		Title = GetFieldValue("Title")
	End Property
	
	%REM
		Property Get Value
		Description: Comments for Property Get
	%END REM
	Property Get Value As Currency
		Value = GetFieldValue("Value")
	End Property
	
	
	%REM
		Property Get Customer
		Description: Comments for Property Get
	%END REM
	Property Get Customer As Customer
		If Customer_ Is Nothing Then
			Dim fact As New CustomerFactory
			Set Customer = fact.GetCustomerByID(CustomerID)
		Else
			Set Customer = Customer_
		End If
	End Property
	
	%REM
		Property Get CustomerID
		Description: Comments for Property Get
	%END REM
	Property Get CustomerID As String
		CustomerID = GetFieldValue("CustomerID")
	End Property
	
	
	%REM
		Property Get ValueFormattedAsString
		Description: Comments for Property Get
	%END REM
	Property Get ValueFormattedAsString As String
		ValueFormattedAsString = Format(Value, "#,###,##0.00")
	End Property
	
	%REM
		Property Get AsJSON
		Description: Comments for Property Get
	%END REM
	Property Get AsJSON As String
		AsJSON = |{| +_
		DocumentDetailAsJSON +|, |+_
		| "Title": "| + Sanitize(Title) + |",|+_
		| "Value": {"Raw": |+CStr(Value) + |,"Formatted": "|+ValueFormattedAsString+|"}|+_
		|}|
	End Property
	
	%REM
		Sub Approve
		Description: Comments for Sub
	%END REM
	Sub Approve()
		'
	End Sub
	
End Class


%REM
	Class Customer
	Description: Comments for Class
%END REM
Class Customer As DocumentWrapper
	Sub New(doc As NotesDocument), DocumentWrapper(doc)
	End Sub
	
	%REM
		Property Get FullName
		Description: Comments for Property Get
	%END REM
	Property Get FullName As String
		FullName = FirstName + " " + LastName
	End Property
	
	%REM
		Property Get FullNameReversed
		Description: Comments for Property Get
	%END REM
	Property Get FullNameReversed As String
		FullNameReversed = LastName + ", " + FirstName
	End Property
	
	Property Get FirstName As String
		FirstName = GetFieldValue("FirstName") 
	End Property
	
	Property Get LastName As String
		LastName = GetFieldValue("LastName") 
	End Property
	
	%REM
		Property Get Invoices
		Description: Comments for Property Get
	%END REM
	Property Get Invoices As InvoiceCollection
		Dim factory As New InvoiceFactory
		
		Set Invoices = factory.GetInvoicesByCustomer(CustomerID)
	End Property
	
	%REM
		Property Get CustomerID
		Description: Comments for Property Get
	%END REM
	Property Get CustomerID As String
		CustomerID = GetFieldValue("CustomerID")
	End Property
	
	%REM
		Property Get AsJSON
		Description: Comments for Property Get
	%END REM
	Property Get AsJSON As String
		AsJSON = |{| +_
		DocumentDetailAsJSON +|, |+_
		| "ID": "| + CustomerID + |",|+_
		| "Name": {"First": "|+Sanitize(FirstName)+|", "Last": "|+Sanitize(LastName)+|"}|+_
		|}|
	End Property
	
End Class


%REM
	Class CustomerCollection
	Description: Comments for Class
%END REM
Class CustomerCollection As DocumentCollection
	Sub New(docs As Variant), DocumentCollection(docs)
	End Sub
	
	Function getFirst() As DocumentWrapper
		If getFirstDoc() Is Nothing Then
			Set getFirst = Nothing
		Else
			Set getFirst = New Customer(CurrentDocument)
		End If
	End Function
	
	Function getNext() As DocumentWrapper
		If getNextDoc() Is Nothing Then
			Set getNext = Nothing
		Else
			Set getNext = New Customer(CurrentDocument)
		End If	
	End Function
End Class
Class CustomerFactory As DocumentFactory
	Sub New(), DocumentFactory()
	End Sub
	
	%REM
		Function GetAllCustomers
		Description: Comments for Function
	%END REM
	Function GetAllCustomers() As CustomerCollection
		Set view_ = database.GetView("AllCustomers")
		
		Set GetAllCustomers = New CustomerCollection(view_.Allentries)
	End Function
	
	%REM
		Function GetCustomersByCity
		Description: Comments for Function
	%END REM
	Function GetCustomersByCity(city As String) As CustomerCollection
		Set view_ = database.GetView("CustomersByCity")
		
		Set GetCustomersByCity = New CustomerCollection(view_.Getalldocumentsbykey(city, False))
	End Function
	
	%REM
		Function GetCustomerByID
		Description: Comments for Function
	%END REM
	Function GetCustomerByID(id As String) As Customer
		Set view_ = database.GetView("CustomersByID")
		
		Set GetCustomerByID = New Customer(view_.getDocumentByKey(id, True))
	End Function
End Class


%REM

***********************************************************************


	BELOW ARE THE BASE CLASSES ON WHICH THEY ARE DERIVED.....


***********************************************************************


%ENDREM

%REM
  Class DocumentFactory
	Description: Comments for Class
%END REM
Class DocumentFactory
	Private Database_ As NotesDatabase 
	Private view_ As NotesView
	
	%REM
		Sub New
		Description: Comments for Sub
	%END REM
	Sub New()
		Dim session As New NotesSession
		Set Database_ = session.Currentdatabase
	End Sub
	
	%REM
		Property Get Database
		Description: Comments for Property Get
	%END REM
	Property Get Database As NotesDatabase
		Set Database = Database_
	End Property
	
	%REM
		Sub printJSONFullArrayToWeb
		Description: Comments for Sub
	%END REM
	Sub printJSONArrayToWebFull(coll As DocumentCollection)
		Call printJSONArrayToWeb(coll, False)
	End Sub
	
	%REM
		Sub printJSONFullArrayToWeb
		Description: Comments for Sub
	%END REM
	Sub printJSONArrayToWebPickerFriendly(coll As DocumentCollection)
		Call printJSONArrayToWeb(coll, True)
	End Sub
	
	%REM
		Sub printJSONArrayToWeb
		Description: Comments for Sub
	%END REM
	Private Sub printJSONArrayToWeb(coll As DocumentCollection, pickerFriendly As Boolean)
		Dim o As Variant, buffer As String, delimiter as String
		
		delimiter = ""
		buffer = ""
		
		Set o = coll.getFirst()
		
		While Not o Is Nothing
			
			If pickerFriendly Then
				buffer = o.AsPickerReadyJSON
			Else
				buffer = o.AsJSON
			End If
			
			buffer=delimiter+buffer
			
			delimiter = ","
			
			Set o = coll.getNext()
		Wend
	
		Print "[" + buffer + "]"
		
	End Sub
End Class
%REM
	Class DocumentWrapper
	Description: Comments for Class
%END REM
Class DocumentWrapper
	Private document_ As NotesDocument
	%REM
		Sub New
		Description: Comments for Sub
	%END REM
	Sub New(doc As NotesDocument)
		Set document_ = doc 
	End Sub
	
	'Document
	Property Get Document As NotesDocument
		Set Document = document_
	End Property
	
	%REM
		Property Get AsJSON
		Description: Comments for Property Get
	%END REM
	Property Get AsJSON As String
		'OVERRIDE THIS!
		AsJSON = "{}"
	End Property
	
	%REM
		Property Get DocumentDetailAsJSON
		Description: Comments for Property Get
	%END REM
	Private Property Get DocumentDetailAsJSON As String
		DocumentDetailAsJSON = | "Document": {|+_
		|  "UNID": "| + document.universalID + |",|+_
		|  "Form": "|+GetFieldValue("Form")+|",|+_
		|  "Created": new Date(|+Format(document.created, "yyyy")+|, (|+Format(document.created, "m")+|-1), |+Format(document.created, "dd")+|), |+_
		|  "Modified": new Date(|+Format(document.Lastmodified, "yyyy")+|, (|+Format(document.Lastmodified, "m")+|-1), |+Format(document.Lastmodified, "dd")+|)|+_
		| }|
	End Property
	
	%REM
		Function getFieldValue
		Description: Comments for Function
	%END REM
	Function GetFieldValue(fieldName As String) As Variant
		getFieldValue = document_.Getitemvalue(fieldName)(0)
	End Function
	
	%REM
		Function Sanitize
		Description: Escapes the " so as not to break the JSON
	%END REM
	Function Sanitize(s As String) As String
		Sanitize = Replace(s, |"|, |\"|)
	End Function
	
	
	%REM
		Sub Save
		Description: Comments for Sub
	%END REM
	Sub Save() 
		Call document.save(True, True)
	End Sub
End Class



%REM
	Base "abstract" class to build collections of document-based objects upon
%ENDREM

Class DocumentCollection
	Private Navigator_ As NotesViewNavigator
	Private Collection_ As NotesDocumentCollection
	Private Entries_ As NotesViewEntryCollection
	Private Entry_ As NotesViewEntry
	Private Document_ As NotesDocument
	
	%REM
		Sub New
		Description: Comments for Sub
	%END REM
	Sub New (docs As Variant)
		If docs IsA "NotesViewNavigator" Then
			Set Navigator_ = docs
		ElseIf docs IsA "NotesDocumentCollection" Then
			Set Collection_ = docs
			
		ElseIf docs IsA "NotesViewEntryCollection" Then
			Set Entries_ = docs
		Else
			
		End If
	End Sub
	
	%REM
		Function getFirst
		Description: Comments for Function
	%END REM
	Function getFirst() As DocumentWrapper
		'OVERRIDE
	End Function
	
	%REM
		Function getFirst
		Description: Comments for Function
	%END REM
	Function getNext() As DocumentWrapper
		'OVERRIDE
	End Function
	
	%REM
		Property Get CurrentDocument
		Description: Comments for Property Get
	%END REM
	Property Get CurrentDocument As NotesDocument
		Set CurrentDocument = Document_
	End Property
	
	Private Function getFirstDoc() As NotesDocument
		If Not Navigator_ Is Nothing Then 
			Set Entry_ = Navigator_.Getfirst()
			
			If Entry_ Is Nothing Then
				Set getFirstDoc = Nothing
			Else
				Set Document_ = Entry_.Document
				Set getFirstDoc = Document_
			End If
			
		ElseIf Not Entries_ Is Nothing Then
			Set Entry_ = Entries_.Getfirstentry()
			
			If Entry_ Is Nothing Then
				Set getFirstDoc = Nothing
			Else
				Set Document_ = Entry_.Document
				Set getFirstDoc = Document_
			End If
			
		ElseIf Not Collection_ Is Nothing Then
			Set Document_ = Collection_.Getfirstdocument()
			
			If Document_ Is Nothing Then
				Set getFirstDoc = Nothing
			Else
				Set getFirstDoc = Document_
			End If
			
		End If
		
	End Function
	
	Private Function getNextDoc() As NotesDocument
		If Not Navigator_ Is Nothing Then 
			Set Entry_ = Navigator_.GetNext(Entry_)
			
			If Entry_ Is Nothing Then
				Set getNextDoc = Nothing
			Else
				Set Document_ = Entry_.Document
				Set getNextDoc = Document_
			End If
		ElseIf Not Entries_ Is Nothing Then
			Set Entry_ = Entries_.GetNextentry(Entry_)
			
			If Entry_ Is Nothing Then
				Set getNextDoc = Nothing
			Else
				Set Document_ = Entry_.Document
				Set getNextDoc = Document_
			End If
			
		ElseIf Not Collection_ Is Nothing Then
			Set Document_ = Collection_.Getnextdocument(Document_)
			
			If Document_ Is Nothing Then
				Set getNextDoc = Nothing
			Else
				Set getNextDoc = Document_
			End If
		End If
	End Function
	
	%REM
		Property Get Count
		Description: Comments for Property Get
	%END REM
	Property Get Count As Long
		If Not Collection_ Is Nothing Then
			Count = Collection_.Count	
		ElseIf Not Navigator_ Is Nothing Then
			Count = Navigator_.Count
		ElseIf Not Entries_ Is Nothing Then
			Count = Entries_.Count
		Else
			Count = 0			
		End If
	End Property
	
End Class
